import pytest
from utils.driver_factory import init_driver
from pages.login_page import LoginPage
from pages.reports_registry_page import ReportsRegistryPage
from selenium.webdriver.common.by import By

@pytest.mark.parametrize("search_value,column_index,expected_titles", [
    (
        "04001",
        2,
        [
            ["040010",
             "Д-9 раздел I. Сведения о специальных организациях образования и численности школ, школ-интернатов, учителей, учащихся"],
            ["040011", "Д-9 (раздел II). Сведения о распределении учащихся по классам"],
            ["040012", "Д-9 (раздел III). Сведения о материальной базе специальных организаций образования"],
            ["040013", "МКШ-1. Сеть и контингент малокомплектных школ (МКШ)"],
            ["040014",
             "МКШ-2. Сведения о совмещенных классах и контингенте обучающихся в малокомплектных школах и количество школ по числу учащихся"],
            ["040015", "МКШ-3. Сведения о малокомплектных школах по языкам обучения, по классам"],
            ["040016", "МКШ-4. Сведения о материальной базе малокомплектных школ"],
            ["040017", "МКШ-6. Сведения о качественном составе педагогических кадров малокомплектных школ"],
            ["040018", "МКШ-10. Сеть ресурсных центров"],
            ["040019", "СТ-1. Отчет об основных показателях среднего образования"]
        ]
    ),
    (
        "дошкольных",
        3,
        [
            ["040001", "ДО-1. Сведения о сети и контингенте детей дошкольных организаций"],
            ["040002", "ДО-2. Сведения о сети и контингенте детей в дошкольных организациях за исключением мини-центров"],
            ["040073", "ДО-4. Сведения о дошкольных организациях (группах) по языкам обучения"],
            ["040075", "ДО-7. Сведения о качественном составе педагогических кадров дошкольных организаций"],
            ["040076", "ДО-8. Сведения о сети и контингенте дошкольных организаций негосударственной формы собственности"],
            ["040077", "ДО-9. Сведения о материальной базе дошкольных организаций"],
            ["040078", "ДО-11. Сведения о специальных дошкольных организациях и о педагогическом составе"],
            ["040080", "ДО-13. Сведения о сети и контингенте в дошкольных организациях за исключением детских садов"],
            ["040082", "ДО-15. Сведения о мониторинге открытия и закрытия дошкольных организаций"]
        ]
    )
])
def test_search_functionality(search_value, column_index, expected_titles):

    driver = init_driver()
    login_page = LoginPage(driver)
    registry_page = ReportsRegistryPage(driver)

    login_page.login("edugov_admin", "CuShF33o", "https://esep.govtec.kz/admin")

    row_texts = registry_page.search_in_registry(search_value, column_index)


    for i, row_data in enumerate(row_texts):
        print(f"Row {i} => {row_data}")


    for expected in expected_titles:
        assert any(row_data[:2] == expected for row_data in row_texts), (
            f"Expected row {expected} not found in results!"
        )

    driver.quit()
